观察者模式的理解

理论上说，观察者模式又叫发布-订阅模式，就是定义一个一对多的依赖关系，当一个对象的状态发生改变，所依赖它的对象将会得到这个改变的通知。
在JS的实现级上，一般通过事件的方式模拟发布-订阅模式。
简单的来说，我们可以这样想——去商场买衣服，刚好断货了，特别喜欢的话就会留下电话，等待卖家通知，所以就是一个典型的发布-订阅的关系，买家不需要每天去询问是否到货，卖家到后才会主动通知。
说了半天，在JS中用这个东东具体干嘛呢？ 
设计模式的核心就是为了解耦，解耦，解耦重要事说三遍。
通过这个模式，一个对象可以不再显示的调用另外一个对象的接口了，或者不关心对象的内部运行状态，只对感兴趣的事件进行观察了。

JS里对观察者模式的实现是通过回调来实现的，参考右边的代码observer.js，其内部包含了3个方法：订阅、退订、发布也就是对应的bind、unbind、trigger方法